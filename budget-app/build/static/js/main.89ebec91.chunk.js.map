{"version":3,"sources":["components/header/header.js","components/footer/footer.jsx","components/accordionCard/accordionCard.jsx","components/cardExpenses/cardExpenses.jsx","components/descriptionCard/descriptionCard.jsx","components/accordionExpenses/expensesTotal.jsx","components/accordionExpenses/accordionExpenses.jsx","pages/expenses/expenses.jsx","pages/home/home.jsx","components/cardIncome/cardIncome.jsx","components/accordionIncome/incomeTotal.jsx","components/accordionIncome/accordionIncome.jsx","pages/income/income.jsx","pages/balance/balance.jsx","pages/fourZeroFour/fourZeroFour.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","incomeTotal","JSON","parse","sessionStorage","getItem","console","log","className","links","map","exact","to","path","name","label","key","Footer","href","target","AccordionCard","Card","Accordion","Toggle","as","eventKey","eventKeyNo","cardTitle","Collapse","Body","children","CardExpenses","useState","daily","monthly","yearly","total","expensesUserData","setExpensesUserData","incomeTotalData","useEffect","expensesData","expensesType","handleOnChange","whichOne","value","tempObj","incomeTotalDaily","totalDaily","Number","Math","round","slice","index","totalMonthly","reduce","prev","current","totalYearly","Container","InputGroup","FormControl","disabled","placeholder","onChange","e","readOnly","DescriptionCard","text","ExpensesTotal","expensesTotal","AccordionExpenses","storedExpensesTotal","React","setExpensesTotal","showForm","setShowForm","contentChange","data","id","setItem","stringify","vitalExpenses","houseExpenses","transportExpenses","investmentsExpenses","charityExpenses","otherExpenses","waistedExpenses","storedIncomeTotal","Expenses","Home","Jumbotron","Button","variant","Row","Col","Text","CardIncome","incomeUserData","setIncomeUserData","incomeData","incomeType","IncomeTotal","AccordionIncome","setIncomeTotal","activeIncome","pasiveIncome","Income","Balance","Value","FourZeroFour","App","component","initObj","link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89ebec91.chunk.js","sourcesContent":["import \"./header.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nfunction Header(props) {\r\n  const incomeTotal = JSON.parse(sessionStorage.getItem(\"incomeTotal\"))\r\n  console.log(incomeTotal)\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"wrapper\">\r\n        <nav className=\"navbar\">\r\n          {props.links.map((links) =>\r\n              <NavLink exact to={links.path} name={links.label} key={links.key}>\r\n                {links.label}\r\n              </NavLink>\r\n            )\r\n          }\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\n\r\n\r\nimport \"./footer.css\"\r\n\r\nconst Footer = () => {\r\n return (\r\n     <div className=\"footer\" >\r\n            <p>Content credits: &copy;  - <a href=\"https://adrian.asoltanie.com/\" target=\"blank\">Adrian Asoltanie</a></p>\r\n     </div>\r\n )\r\n\r\n}\r\n\r\nexport default Footer;","import React from \"react\"\r\nimport { Card, Accordion } from \"react-bootstrap\"\r\n\r\nconst AccordionCard = (props) => {\r\n \r\n  return (\r\n    <Card>\r\n      <Accordion.Toggle as={Card.Header} eventKey={props.eventKeyNo}>\r\n        {props.cardTitle}\r\n      </Accordion.Toggle>\r\n\r\n      <Accordion.Collapse eventKey={props.eventKeyNo}>\r\n        <Card.Body>{props.children}</Card.Body>\r\n    \r\n      </Accordion.Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AccordionCard\r\n","import React from \"react\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nimport { Container, InputGroup, FormControl } from \"react-bootstrap\"\r\n\r\nconst CardExpenses = (props) => {\r\n  const expensesObj = {\r\n    daily: [0, 0, 0],\r\n    monthly: [0, 0, 0],\r\n    yearly: [0, 0, 0],\r\n    name: [\"\", \"\", \"\"],\r\n    total: {\r\n      daily: 0,\r\n      monthly: 0,\r\n      yearly: 0,\r\n    },\r\n  }\r\n\r\n  const [expensesUserData, setExpensesUserData] = useState(expensesObj)\r\n  const incomeTotalData = JSON.parse(sessionStorage.getItem(\"incomeTotal\"))\r\n\r\n  useEffect(() => {\r\n    const expensesData = JSON.parse(\r\n      sessionStorage.getItem(`expenses${props.expensesType}`)\r\n    )\r\n    if (expensesData) {\r\n      setExpensesUserData(expensesData)\r\n    }\r\n   \r\n  }, [])\r\n\r\n  const handleOnChange = (whichOne, value) => {\r\n    const tempObj = { ...expensesUserData }\r\n    let incomeTotalDaily = 0\r\n    if (incomeTotalData) incomeTotalDaily = incomeTotalData.totalDaily\r\n    switch (whichOne) {\r\n      case \"first-monthly-expenses\":\r\n        tempObj.monthly[0] = value ? Number(value) : 0\r\n        tempObj.yearly[0] = value ? Number(value) * 12 : 0\r\n        tempObj.daily[0] = value\r\n          ? Number(Math.round(tempObj.yearly[0] / incomeTotalDaily))\r\n          : 0\r\n        break\r\n      case \"second-monthly-expenses\":\r\n        tempObj.monthly[1] = value ? Number(value) : 0\r\n        tempObj.yearly[1] = value ? Number(value) * 12 : 0\r\n        tempObj.daily[1] = value\r\n          ? Number(Math.round(tempObj.yearly[1] / incomeTotalDaily))\r\n          : 0\r\n        break\r\n      case \"third-monthly-expenses\":\r\n        tempObj.monthly[2] = value ? Number(value) : 0\r\n        tempObj.yearly[2] = value ? Number(value) * 12 : 0\r\n        tempObj.daily[2] = value\r\n          ? Number(Math.round(tempObj.yearly[2] / incomeTotalDaily))\r\n          : 0\r\n        break\r\n        case \"name-expenses-0\":\r\n        case \"name-expenses-1\":\r\n        case \"name-expenses-2\":\r\n        console.log(whichOne.slice(-1), value)\r\n        const index = whichOne.slice(-1)\r\n        tempObj.name[Number(index)] = value\r\n        break;\r\n\r\n      default:\r\n        break\r\n    }\r\n\r\n    \r\n\r\n    const totalMonthly = tempObj.monthly.reduce(\r\n      (prev, current) => prev + current\r\n    )\r\n    const totalYearly = tempObj.yearly.reduce((prev, current) => prev + current)\r\n    const totalDaily = tempObj.daily.reduce((prev, current) => prev + current) \r\n    tempObj.total = {\r\n      daily: totalDaily,\r\n      monthly: totalMonthly,\r\n      yearly: totalYearly,\r\n    }\r\n    setExpensesUserData(tempObj)\r\n    if (props.handleOnChange && props.expensesType)\r\n      props.handleOnChange(tempObj, props.expensesType)\r\n  }\r\n \r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Container className=\"expenses-container\">\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl\r\n          aria-label=\"Expenses Name\"\r\n          value=\"Expenses Name\"\r\n          disabled\r\n        />\r\n        <FormControl aria-label=\"Month\" value=\"Month\" disabled />\r\n        <FormControl aria-label=\"Year\" value=\"Year\" disabled />\r\n        <FormControl aria-label=\"Day\" value=\"Days Worked\" disabled />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl\r\n          aria-label=\"Name\"\r\n          placeholder={expensesUserData?.name[0] || \"Expense Name\"}\r\n          onChange={(e) => handleOnChange(\"name-expenses-0\", e.target.value)}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Month\"\r\n          placeholder={expensesUserData?.monthly[0] || \"Monthly Expenses\"}\r\n          onChange={(e) =>\r\n            handleOnChange(\"first-monthly-expenses\", e.target.value)\r\n          }\r\n        />\r\n        <FormControl\r\n          aria-label=\"Year\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={expensesUserData.yearly[0]}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Day\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={expensesUserData.daily[0]}\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl\r\n          aria-label=\"Name\"\r\n          placeholder={expensesUserData?.name[1] || \"Expense Name\"}\r\n          onChange={(e) => handleOnChange(\"name-expenses-1\", e.target.value)}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Month\"\r\n          placeholder={expensesUserData?.monthly[1] || \"Monthly Expenses\"}\r\n          onChange={(e) =>\r\n            handleOnChange(\"second-monthly-expenses\", e.target.value)\r\n          }\r\n        />\r\n        <FormControl\r\n          aria-label=\"Year\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={expensesUserData.yearly[1]}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Day\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={expensesUserData.daily[1]}\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl\r\n          aria-label=\"Name\"\r\n          placeholder={expensesUserData?.name[2] || \"Expense Name\"}\r\n          onChange={(e) => handleOnChange(\"name-expenses-2\", e.target.value)}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Month\"\r\n          placeholder={expensesUserData?.monthly[2] || \"Monthly Expenses\"}\r\n          onChange={(e) =>\r\n            handleOnChange(\"third-monthly-expenses\", e.target.value)\r\n          }\r\n        />\r\n        <FormControl\r\n          aria-label=\"Year\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={expensesUserData.yearly[2]}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Day\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={expensesUserData.daily[2]}\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl aria-label=\"total\" value=\"Total\" disabled />\r\n        <FormControl\r\n          aria-label=\"total-month\"\r\n          readOnly\r\n          value={expensesUserData.total.monthly}\r\n        />\r\n        <FormControl\r\n          aria-label=\"total-year\"\r\n          readOnly\r\n          value={expensesUserData.total.yearly}\r\n        />\r\n        <FormControl\r\n          aria-label=\"total-day\"\r\n          readOnly\r\n          value={expensesUserData.total.daily}\r\n        />\r\n      </InputGroup>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CardExpenses\r\n","import React from \"react\";\r\nimport {Card} from \"react-bootstrap\"\r\n\r\nconst DescriptionCard = (props) => {\r\n    return (\r\n        <div className=\"description-card\">\r\n        <Card>\r\n             <Card.Body className=\"text-description-card\">{props.text}</Card.Body>\r\n        </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DescriptionCard\r\n","import React from \"react\"\r\n\r\nimport { InputGroup, FormControl } from \"react-bootstrap\"\r\n\r\n\r\nconst ExpensesTotal = ({ expensesTotal }) => (\r\n    <InputGroup className=\"mb-1\">\r\n        <FormControl aria-label=\"total\" value=\"Total Expenses\" disabled />\r\n        <FormControl\r\n          aria-label=\"total-month\"\r\n          placeholder= \"month\"\r\n          readOnly\r\n          value={expensesTotal?.totalMonthly || 0}\r\n        />\r\n        <FormControl\r\n          aria-label=\"total-year\"\r\n          placeholder= \"year\"\r\n          readOnly\r\n          value={expensesTotal?.totalYearly || 0}\r\n        />\r\n        <FormControl\r\n          aria-label=\"total-day\"\r\n          placeholder= \"day\"\r\n          readOnly\r\n          value={expensesTotal?.totalDaily || 0}\r\n        />\r\n      </InputGroup>\r\n    )\r\n\r\nexport default ExpensesTotal","import React from \"react\"\r\n\r\nimport { Accordion } from \"react-bootstrap\"\r\nimport AccordionCard from \"../accordionCard/accordionCard\"\r\nimport CardExpenses from \"../cardExpenses/cardExpenses\"\r\n\r\nimport DescriptionCard from \"../descriptionCard/descriptionCard\"\r\nimport ExpensesTotal from \"./expensesTotal\"\r\n\r\nconst AccordionExpenses = () => {\r\n  const storedExpensesTotal = JSON.parse(\r\n    sessionStorage.getItem(\"expensesTotal\")\r\n  )\r\n  const [expensesTotal, setExpensesTotal] = React.useState(storedExpensesTotal)\r\n  const [showForm, setShowForm] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    const storedIncomeTotal = JSON.parse(sessionStorage.getItem(\"incomeTotal\"))\r\n    if (storedIncomeTotal && storedIncomeTotal.totalDaily) {\r\n      setShowForm(true)\r\n    }\r\n  }, [])\r\n\r\n  function contentChange(data, id) {\r\n    sessionStorage.setItem(`expenses${id}`, JSON.stringify(data))\r\n\r\n    const vitalExpenses = JSON.parse(sessionStorage.getItem(\"expensesvital\"))\r\n    const houseExpenses = JSON.parse(sessionStorage.getItem(\"expenseshouse\"))\r\n    const transportExpenses = JSON.parse(\r\n      sessionStorage.getItem(\"expensestransport\")\r\n    )\r\n    const investmentsExpenses = JSON.parse(\r\n      sessionStorage.getItem(\"expensesinvestments\")\r\n    )\r\n    const charityExpenses = JSON.parse(\r\n      sessionStorage.getItem(\"expensescharity\")\r\n    )\r\n    const otherExpenses = JSON.parse(sessionStorage.getItem(\"expensesother\"))\r\n    const waistedExpenses = JSON.parse(\r\n      sessionStorage.getItem(\"expenseswaisted\")\r\n    )\r\n\r\n    const totalMonthly =\r\n      vitalExpenses?.total.monthly +\r\n      houseExpenses?.total.monthly +\r\n      transportExpenses?.total.monthly +\r\n      investmentsExpenses?.total.monthly +\r\n      charityExpenses?.total.monthly +\r\n      otherExpenses?.total.monthly +\r\n      waistedExpenses?.total.monthly\r\n    const totalDaily =\r\n      vitalExpenses?.total.daily +\r\n      houseExpenses?.total.daily +\r\n      transportExpenses?.total.daily +\r\n      investmentsExpenses?.total.daily +\r\n      charityExpenses?.total.daily +\r\n      otherExpenses?.total.daily +\r\n      waistedExpenses?.total.daily\r\n    const totalYearly =\r\n      vitalExpenses?.total.yearly +\r\n      houseExpenses?.total.yearly +\r\n      transportExpenses?.total.yearly +\r\n      investmentsExpenses?.total.yearly +\r\n      charityExpenses?.total.yearly +\r\n      otherExpenses?.total.yearly +\r\n      waistedExpenses?.total.yearly\r\n    setExpensesTotal({ totalMonthly, totalDaily, totalYearly })\r\n    sessionStorage.setItem(\r\n      \"expensesTotal\",\r\n      JSON.stringify({ totalMonthly, totalDaily, totalYearly })\r\n    )\r\n  }\r\n\r\n  return showForm ? (\r\n    <div>\r\n      <Accordion>\r\n        <AccordionCard cardTitle=\"Vital expenses (20-25%)\" eventKeyNo=\"1\">\r\n          <CardExpenses handleOnChange={contentChange} expensesType=\"vital\" />\r\n          <DescriptionCard text=\"ex: food, hygiene products, medication\" />\r\n        </AccordionCard>\r\n\r\n        <AccordionCard cardTitle=\"House expenses (20-25%)\" eventKeyNo=\"2\">\r\n          <CardExpenses handleOnChange={contentChange} expensesType=\"house\" />\r\n          <DescriptionCard text=\"ex: rent, mortgage, gas, electricity, water, cable/netflix/hbo, internet, phone, garbage, house taxes, house insurance, repairs\" />\r\n        </AccordionCard>\r\n\r\n        <AccordionCard cardTitle=\"Trasport expenses (3-5%)\" eventKeyNo=\"3\">\r\n          <CardExpenses\r\n            handleOnChange={contentChange}\r\n            expensesType=\"transport\"\r\n          />\r\n          <DescriptionCard text=\"ex: public transportation, car loan, fuel, insurance, vignette, tax, revision, repairs, car wash\" />\r\n        </AccordionCard>\r\n\r\n        <AccordionCard\r\n          cardTitle=\"Investments and savings (3-5%)\"\r\n          eventKeyNo=\"4\"\r\n        >\r\n          <CardExpenses\r\n            handleOnChange={contentChange}\r\n            expensesType=\"investments\"\r\n          />\r\n          <DescriptionCard text=\"ex: safety fund, emergency fund, education, retirement\" />\r\n        </AccordionCard>\r\n\r\n        <AccordionCard cardTitle=\"Charity expenses (5-10%)\" eventKeyNo=\"5\">\r\n          <CardExpenses handleOnChange={contentChange} expensesType=\"charity\" />\r\n          <DescriptionCard text=\"ex: SMS, food donation, money donation, time or any other valueable things\" />\r\n        </AccordionCard>\r\n\r\n        <AccordionCard cardTitle=\"Other expenses (20-25%)\" eventKeyNo=\"6\">\r\n          <CardExpenses handleOnChange={contentChange} expensesType=\"other\" />\r\n          <DescriptionCard text=\"ex: kindergarten, babysitter, parties, anniversaries, clothes, holidays, hairstyling, restaurants, electronics, furniture, maid, pets, health insurance, life insurance, hobbies\" />\r\n        </AccordionCard>\r\n\r\n        <AccordionCard cardTitle=\"Waisted money (0-2%)\" eventKeyNo=\"7\">\r\n          <CardExpenses handleOnChange={contentChange} expensesType=\"waisted\" />\r\n          <DescriptionCard text=\"ex: coffee, alchool, tobacco, bets \" />\r\n        </AccordionCard>\r\n      </Accordion>\r\n      <ExpensesTotal expensesTotal={expensesTotal} />\r\n    </div>\r\n  ) : (\r\n    <div className=\"warrning-style\">Please write your income first</div>\r\n  )\r\n}\r\n\r\nexport default AccordionExpenses\r\n","import React from 'react';\r\nimport AccordionExpenses from '../../components/accordionExpenses/accordionExpenses';\r\nimport \"./expenses.css\";\r\n\r\n\r\nconst Expenses = () => {\r\n    return (\r\n    <div className=\"container-expenses\">\r\n        <AccordionExpenses>\r\n        </AccordionExpenses>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React from \"react\"\r\n\r\nimport \"./home.css\"\r\nimport { Button, Jumbotron, Card, Container, Row, Col } from \"react-bootstrap\"\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <Jumbotron>\r\n        <h5>\"Never spend your money before you earned it\"</h5>\r\n        <p>\r\n          <Button variant=\"dark\">Learn more</Button>\r\n        </p>\r\n      </Jumbotron>\r\n  \r\n        <Container className=\"instructions\">\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"card-instruction\">\r\n                <Card.Text>\r\n                  <h6>How many financial legs do you stand on? How many source of income do you have? It is recommended at least 3 for a family.</h6>\r\n                </Card.Text>\r\n              </Card>\r\n            </Col>\r\n            <Col >\r\n              <Card className=\"card-instruction\">\r\n                <Card.Text>\r\n                  <h6>Do you only have active income? Then you are caught in the rat race. Build passive income in time.</h6>\r\n                </Card.Text>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"card-instruction\">\r\n                <Card.Text>\r\n                  <h6>How much money goes through your hands in 12 months? On what do they go to and how many stop at you?</h6>\r\n                </Card.Text>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"card-instruction\">\r\n                <Card.Text>\r\n                  <h6> How much is a day's work worth? Can you do better? </h6>\r\n                </Card.Text>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"card-instruction\">\r\n                <Card.Text>\r\n                  <h6> Your safety fund should be your total month expenses * 6. Your emergency fund should be 1500-2000 RON </h6>\r\n                </Card.Text>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"card-instruction\" >\r\n                <Card.Text>\r\n                  <h6> Divide the money into categories / accounts / envelopes to separate and track expenses more easily.</h6>\r\n                </Card.Text>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Container, FormControl, InputGroup } from \"react-bootstrap\"\r\nimport \"./cardIncome.css\"\r\n\r\nconst CardIncome = (props) => {\r\n  const incomeObj = {\r\n    daily: [0, 0, 0],\r\n    monthly: [0, 0, 0],\r\n    yearly: [0, 0, 0],\r\n    name: [\"\", \"\", \"\"],\r\n    total: {\r\n      daily: 0,\r\n      monthly: 0,\r\n      yearly: 0,\r\n    },\r\n  }\r\n  const [incomeUserData, setIncomeUserData] = useState(incomeObj)\r\n\r\n  useEffect(() => {\r\n    const incomeData = JSON.parse(\r\n      sessionStorage.getItem(`income${props.incomeType}`)\r\n    )\r\n    if (incomeData) {\r\n      setIncomeUserData(incomeData)\r\n    }\r\n  }, [])\r\n\r\n  const handleOnChange = (whichOne, value) => {\r\n    const tempObj = { ...incomeUserData }\r\n\r\n    switch (whichOne) {\r\n      case \"first-monthly-income\":\r\n        tempObj.monthly[0] = value ? Number(value) : 0\r\n        tempObj.yearly[0] = value ? Number(value) * 12 : 0\r\n        tempObj.daily[0] = value ? Number(Math.round(value / 21)) : 0\r\n        break\r\n      case \"second-monthly-income\":\r\n        tempObj.monthly[1] = value ? Number(value) : 0\r\n        tempObj.yearly[1] = value ? Number(value) * 12 : 0\r\n        tempObj.daily[1] = value ? Number(Math.round(value / 21)) : 0\r\n        break\r\n      case \"third-monthly-income\":\r\n        tempObj.monthly[2] = value ? Number(value) : 0\r\n        tempObj.yearly[2] = value ? Number(value) * 12 : 0\r\n        tempObj.daily[2] = value ? Number(Math.round(value / 21)) : 0\r\n        break\r\n      case \"name-income-0\":\r\n      case \"name-income-1\":\r\n      case \"name-income-2\":\r\n        console.log(whichOne.slice(-1), value)\r\n        const index = whichOne.slice(-1)\r\n        tempObj.name[Number(index)] = value\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    const totalMonthly = tempObj.monthly.reduce(\r\n      (prev, current) => prev + current\r\n    )\r\n    const totalYearly = tempObj.yearly.reduce((prev, current) => prev + current)\r\n    const totalDaily = tempObj.daily.reduce((prev, current) => prev + current)\r\n\r\n    tempObj.total = {\r\n      daily: totalDaily,\r\n      monthly: totalMonthly,\r\n      yearly: totalYearly,\r\n    }\r\n    setIncomeUserData(tempObj)\r\n    if (props.handleOnChange && props.incomeType)\r\n      props.handleOnChange(tempObj, props.incomeType)\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <Container className=\"income-container\">\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl aria-label=\"Income Name\" value=\"Income Name\" disabled />\r\n        <FormControl aria-label=\"Month\" value=\"Month\" disabled />\r\n        <FormControl aria-label=\"Year\" value=\"Year\" disabled />\r\n        <FormControl aria-label=\"Day\" value=\"Day\" disabled />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl\r\n          aria-label=\"Name\"\r\n          placeholder={incomeUserData?.name[0] || \"Income Name\"}\r\n          onChange={(e) => {\r\n            handleOnChange(\"name-income-0\", e.target.value)\r\n            console.log(e.target.value)\r\n          }}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Month\"\r\n          placeholder={incomeUserData?.monthly[0] || \"Monthly Income\"}\r\n          onChange={(e) =>\r\n            handleOnChange(\"first-monthly-income\", e.target.value)\r\n          }\r\n        />\r\n        <FormControl\r\n          aria-label=\"Year\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={incomeUserData.yearly[0]}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Day\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={incomeUserData.daily[0]}\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl\r\n          aria-label=\"Name\"\r\n          placeholder={incomeUserData?.name[1] || \"Income Name\"}\r\n          onChange={(e) => handleOnChange(\"name-income-1\", e.target.value)}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Month\"\r\n          placeholder={incomeUserData?.monthly[1] || \"Monthly Income\"}\r\n          onChange={(e) =>\r\n            handleOnChange(\"second-monthly-income\", e.target.value)\r\n          }\r\n        />\r\n        <FormControl\r\n          aria-label=\"Year\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={incomeUserData.yearly[1]}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Day\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={incomeUserData.daily[1]}\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl\r\n          aria-label=\"Name\"\r\n          placeholder={incomeUserData?.name[2] || \"Income Name\"}\r\n          onChange={(e) => handleOnChange(\"name-income-2\", e.target.value)}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Month\"\r\n          placeholder={incomeUserData?.monthly[2] || \"Monthly Income\"}\r\n          onChange={(e) =>\r\n            handleOnChange(\"third-monthly-income\", e.target.value)\r\n          }\r\n        />\r\n        <FormControl\r\n          aria-label=\"Year\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={incomeUserData.yearly[2]}\r\n        />\r\n        <FormControl\r\n          aria-label=\"Day\"\r\n          className=\"year-day\"\r\n          readOnly\r\n          value={incomeUserData.daily[2]}\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl aria-label=\"total\" value=\"Total\" disabled />\r\n        <FormControl\r\n          aria-label=\"total-month\"\r\n          readOnly\r\n          value={incomeUserData.total.monthly}\r\n        />\r\n        <FormControl\r\n          aria-label=\"total-year\"\r\n          readOnly\r\n          value={incomeUserData.total.yearly}\r\n        />\r\n        <FormControl\r\n          aria-label=\"total-day\"\r\n          readOnly\r\n          value={incomeUserData.total.daily}\r\n        />\r\n      </InputGroup>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CardIncome\r\n","import React from \"react\"\r\n\r\nimport { InputGroup, FormControl } from \"react-bootstrap\"\r\n\r\n\r\nconst IncomeTotal = ({ incomeTotal }) => (\r\n    <InputGroup className=\"mb-1\">\r\n        <FormControl aria-label=\"total\" value=\"Total Income\" disabled />\r\n        <FormControl\r\n          aria-label=\"total-month\"\r\n          placeholder= \"month\"\r\n          readOnly\r\n          value={incomeTotal?.totalMonthly || 0}\r\n        />\r\n        <FormControl\r\n          aria-label=\"total-year\"\r\n          placeholder= \"year\"\r\n          readOnly\r\n          value={incomeTotal?.totalYearly || 0}\r\n        />\r\n        <FormControl\r\n          aria-label=\"total-day\"\r\n          placeholder= \"day\"\r\n          readOnly\r\n          value={incomeTotal?.totalDaily || 0}\r\n        />\r\n      </InputGroup>\r\n    )\r\n\r\nexport default IncomeTotal","import React from \"react\"\r\n\r\nimport Accordion from \"react-bootstrap/Accordion\"\r\nimport AccordionCard from \"../accordionCard/accordionCard\"\r\nimport CardIncome from \"../cardIncome/cardIncome\"\r\nimport DescriptionCard from \"../descriptionCard/descriptionCard\"\r\nimport IncomeTotal from \"./incomeTotal\"\r\n\r\nconst AccordionIncome = () => {\r\n  const storedIncomeTotal = JSON.parse(sessionStorage.getItem(\"incomeTotal\"))\r\n  const [incomeTotal, setIncomeTotal] = React.useState(storedIncomeTotal)\r\n\r\n  function contentChange(data, id) {\r\n    sessionStorage.setItem(`income${id}`, JSON.stringify(data))\r\n\r\n    const activeIncome = JSON.parse(sessionStorage.getItem(\"incomeactive\"))\r\n    const pasiveIncome = JSON.parse(sessionStorage.getItem(\"incomepasive\"))\r\n\r\n    const totalMonthly = activeIncome?.total.monthly + pasiveIncome?.total.monthly\r\n    const totalDaily = activeIncome?.total.daily + pasiveIncome?.total.daily\r\n    const totalYearly = activeIncome?.total.yearly + pasiveIncome?.total.yearly\r\n    \r\n    setIncomeTotal({ totalMonthly, totalDaily, totalYearly })\r\n    sessionStorage.setItem(\r\n      \"incomeTotal\",\r\n      JSON.stringify({ totalMonthly, totalDaily, totalYearly })\r\n    )\r\n    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Accordion>\r\n        <AccordionCard cardTitle=\"Active Income\" eventKeyNo=\"1\">\r\n          <CardIncome handleOnChange={contentChange} incomeType=\"active\" />\r\n          <DescriptionCard text=\"ex:salaries, bonuses, commissions\"></DescriptionCard>\r\n        </AccordionCard>\r\n        <AccordionCard cardTitle=\"Pasive Income\" eventKeyNo=\"2\">\r\n          <CardIncome handleOnChange={contentChange} incomeType=\"pasive\" />\r\n          <DescriptionCard text=\"ex:dividendes, rents, interest, copyright. (you should put the net income, after taxes) \"></DescriptionCard>\r\n        </AccordionCard>\r\n      </Accordion>\r\n      <IncomeTotal incomeTotal={incomeTotal} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccordionIncome\r\n","import React, { useEffect } from \"react\"\r\nimport \"./income.css\"\r\n\r\nimport AccordionIncome from \"../../components/accordionIncome/accordionIncome\"\r\n\r\nconst Income = () => {\r\n  return (\r\n    <div className=\"container-income\">\r\n\r\n      <AccordionIncome />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Income\r\n","import React from \"react\"\r\nimport \"./balance.css\"\r\n\r\nimport { InputGroup, FormControl } from \"react-bootstrap\"\r\n\r\nconst Balance = () => {\r\n\r\n  const incomeTotal = JSON.parse(sessionStorage.getItem(\"incomeTotal\"))\r\n  const expensesTotal = JSON.parse(sessionStorage.getItem(\"expensesTotal\"))\r\n\r\n  return (\r\n    <div className=\"container-budget\">\r\n     \r\n\r\n      <div className=\"balance-container\">\r\n      <InputGroup className=\"mb-1\">\r\n        <FormControl aria-label=\"Labels\" disabled />\r\n        <FormControl aria-label=\"Month\" value=\"Per Month\" disabled />\r\n        <FormControl aria-label=\"Year\" value=\"Per Year\" disabled />\r\n        <FormControl aria-label=\"Day\" Value=\"Per Day\" disabled />\r\n      </InputGroup>\r\n        <InputGroup className=\"mb-1\">\r\n          <FormControl aria-label=\"total\" value=\"Total Income\" disabled />\r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-month\"\r\n            placeholder=\"month\"\r\n            readOnly\r\n            value={incomeTotal?.totalMonthly || 0 }\r\n          />\r\n          \r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-year\"\r\n            placeholder=\"year\"\r\n            readOnly\r\n            value={incomeTotal?.totalYearly || 0 }\r\n          />\r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-day\"\r\n            placeholder=\"day\"\r\n            readOnly\r\n            value={incomeTotal?.totalDaily || 0 }\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-1\">\r\n        <FormControl aria-label=\"Labels\"  disabled />\r\n        <FormControl aria-label=\"Month\" value=\"Per Month\" disabled />\r\n        <FormControl aria-label=\"Year\" value=\"Per Year\" disabled />\r\n        <FormControl aria-label=\"Day\" value=\"Days worked\" disabled />\r\n      </InputGroup>\r\n        <InputGroup className=\"mb-1\">\r\n          <FormControl aria-label=\"total\" value=\"Total Expenses\" disabled />\r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-month\"\r\n            placeholder=\"month\"\r\n            readOnly\r\n            value={expensesTotal?.totalMonthly || 0 }\r\n          />\r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-year\"\r\n            placeholder=\"year\"\r\n            readOnly\r\n            value={expensesTotal?.totalYearly || 0 }\r\n          />\r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-day\"\r\n            placeholder=\"days worked\"\r\n            readOnly\r\n            value={expensesTotal?.totalDaily || 0 }\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-1\">\r\n        <FormControl aria-label=\"Labels\"  disabled />\r\n        <FormControl aria-label=\"Month\" value=\"Per Month\" disabled />\r\n        <FormControl aria-label=\"Year\" value=\"Per Year\" disabled />\r\n        <FormControl aria-label=\"Day\" Value=\"Days Left\" disabled />\r\n      </InputGroup>\r\n        <InputGroup className=\"mb-1\">\r\n          <FormControl aria-label=\"total\" value=\"Balance\" disabled />\r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-month\"\r\n            placeholder=\"month\"\r\n            readOnly\r\n            value={(incomeTotal?.totalMonthly - expensesTotal?.totalMonthly) || 0}\r\n          />\r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-year\"\r\n            placeholder=\"year\"\r\n            readOnly\r\n            value={(incomeTotal?.totalYearly - expensesTotal?.totalYearly) || 0}\r\n          />\r\n          {/* Total days in balance is 365 (days a year) - total-expenses-days-worked */}\r\n          <FormControl\r\n            className=\"year-day\"\r\n            aria-label=\"total-day\"\r\n            placeholder=\"days left\"\r\n            readOnly\r\n            value={(260 - expensesTotal?.totalDaily) || 0}\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import React from \"react\";\r\nimport \"./fourZeroFour.css\"\r\n\r\n\r\nconst FourZeroFour = () => {\r\n\r\n    return (\r\n        <div className=\"not-found-container\">\r\n            <p>Sorry, this page doesn't exist!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourZeroFour","import React, { useEffect } from \"react\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\n\r\nimport Header from \"./components/header/header\"\r\nimport Footer from \"./components/footer/footer\"\r\nimport Expenses from \"./pages/expenses/expenses\"\r\nimport Home from \"./pages/home/home\"\r\nimport Income from \"./pages/income/income\"\r\nimport Balance from \"./pages/balance/balance\"\r\nimport FourZeroFour from \"./pages/fourZeroFour/fourZeroFour\"\r\n\r\nfunction App() {\r\n  const links = [\r\n    {\r\n      key: \"1\",\r\n      path: \"/\",\r\n      label: \"Home\",\r\n      component: () => <Home />,\r\n    },\r\n    {\r\n      key: \"2\",\r\n      path: \"/income\",\r\n      label: \"Income\",\r\n      component: () => <Income />,\r\n    },\r\n    {\r\n      key: \"3\",\r\n      path: \"/expenses\",\r\n      label: \"Expenses\",\r\n      component: () => <Expenses />,\r\n    },\r\n    {\r\n      key: \"4\",\r\n      path: \"/balance\",\r\n      label: \"Balance\",\r\n      component: () => <Balance />,\r\n    },\r\n  ]\r\n\r\n  const initObj = {\r\n    daily: [0, 0, 0],\r\n    monthly: [0, 0, 0],\r\n    yearly: [0, 0, 0],\r\n    name: [\"\", \"\", \"\"],\r\n    total: {\r\n      daily: 0,\r\n      monthly: 0,\r\n      yearly: 0,\r\n    },\r\n  }\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"incomeactive\", JSON.stringify(initObj))\r\n    sessionStorage.setItem(\"incomepasive\", JSON.stringify(initObj))\r\n    sessionStorage.setItem(\"expensesvital\", JSON.stringify(initObj))\r\n    sessionStorage.setItem(\"expenseshouse\", JSON.stringify(initObj))\r\n    sessionStorage.setItem(\"expensestransport\", JSON.stringify(initObj))\r\n    sessionStorage.setItem(\"expensesinvestments\", JSON.stringify(initObj))\r\n    sessionStorage.setItem(\"expensescharity\", JSON.stringify(initObj))\r\n    sessionStorage.setItem(\"expensesother\", JSON.stringify(initObj))\r\n    sessionStorage.setItem(\"expenseswaisted\", JSON.stringify(initObj))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header links={links} />\r\n        <Switch>\r\n          {links.map((link) => (\r\n            <Route key={link.label} exact path={link.path}>\r\n              {link.component}\r\n            </Route>\r\n          ))}\r\n          <Route>\r\n            <FourZeroFour />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}